name: Build

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        version: ['5.15.2']
    steps:
    - uses: actions/checkout@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.version }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qt5charts'
        tools: 'tools_openssl_x64,1.1.1-10,qt.tools.openssl.win_x64'

    - name: Build
      if: startsWith(matrix.os, 'windows')
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        mkdir build
        cd build
        cmake -DCMAKE_PREFIX_PATH="C:\Qt\5.15.2\msvc2019_64" -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=RELEASE -DDEPLOY_QT_LIBRARIES=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        cmake --build . --config Release
        ctest -C Release .
        cp *.qm ./Release
        for /R c:\Qt\Tools\OpenSSL %%f in (*.dll) do copy %%f "%CD%\Release"
      shell: cmd


    - name: Archive build results
      uses: actions/upload-artifact@v2
      with:
        name: viewer
        path: ./build/Release/*
